// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.234.0/containers/debian
{
	"name": "Debian",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Debian version: bullseye, buster
		// Use bullseye on local arm64/Apple Silicon.
		"args": { "VARIANT": "bullseye" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"DavidAnson.vscode-markdownlint",
		"hashicorp.hcl",
		"jebbs.markdown-extended",
		"lizebang.bash-extension-pack",
		"ms-azuretools.vscode-azureterraform",
		"ms-kubernetes-tools.vscode-kubernetes-tools",
		"ms-python.python",
		"ms-python.vscode-pylance",
		"ms-vscode.makefile-tools",
		"Mukundan.python-docs",
		"pjmiravalle.terraform-advanced-syntax-highlighting",
		"redhat.vscode-yaml",
		"ryu1kn.partial-diff",
		"shd101wyy.markdown-preview-enhanced",
		"yzhang.markdown-all-in-one",
		"yzane.markdown-pdf"
	],

	"postCreateCommand": ["pip", "install", "-r", "${containerWorkspaceFolder}/requirements.txt"],

	"containerEnv": {
		"SP_APP_ID": "${localEnv:DEV_SP_APPID}",
		"SP_PASSWORD": "${localEnv:DEV_SP_PASSWORD}",
		"SP_SUBSCRIPTION_ID": "${localEnv:DEV_SUBSCRIPTION_ID}",

		"ARM_CLIENT_ID": "${localEnv:DEV_SP_APPID}",
		"ARM_CLIENT_SECRET": "${localEnv:DEV_SP_PASSWORD}",
		"ARM_SUBSCRIPTION_ID": "${localEnv:DEV_SUBSCRIPTION_ID}",
		"ARM_TENANT_ID": "${localEnv:SP_TENANTID}"
	},
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	"runArgs": [
		"--env-file", ".devcontainer/devcontainer.env",
		"--volume", "${localEnv:REPO_ROOT}/aurora.k8s.deploy.env:${containerWorkspaceFolder}/../aurora.k8s.deploy.env:ro",
		"--volume", "${localEnv:PIP_CONFIG_FILE}:/home/vscode/.config/pip/pip.conf:ro",
		"--volume", "${localEnv:HOME}/.ssh:/home/vscode/.ssh:ro",
		"--volume", "/etc/localtime:/etc/localtime:ro",
		"--volume", "/etc/timezone:/etc/timezone:ro"
	],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	"postCreateCommand": ["pip", "install", "-r", "${containerWorkspaceFolder}/requirements.txt", "flake8"],

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"terraform": "latest",
		"git": "os-provided",
		"azure-cli": "latest",
		"python": "3.10"
	}
}
